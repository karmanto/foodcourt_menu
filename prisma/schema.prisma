generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")         // menggunakan connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING")      // menggunakan direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")      // digunakan untuk migrations
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  active    Boolean  @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String

  menus     Menu[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Menu {
  id         Int       @id @default(autoincrement())
  name       String
  desc       String
  price      Float
  pic_url    String
  favorite   Boolean   @default(false)

  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId Int

  orderMenus OrderMenu[]

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Discount {
  id          Int       @id @default(autoincrement())
  name        String
  value       Float
  startPeriod DateTime
  endPeriod   DateTime

  orders      Order[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Chair {
  id        Int    @id @default(autoincrement())
  uuid      String @default(uuid()) @unique
  name      String

  orders    Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id             Int       @id @default(autoincrement())
  whatsappNumber String
  status         String

  discount       Discount? @relation(fields: [discountId], references: [id])
  discountId     Int?
  
  chair          Chair     @relation(fields: [chairId], references: [id])
  chairId        Int

  orderMenus     OrderMenu[]

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model OrderMenu {
  price     Float
  quantity  Int

  order     Order @relation(fields: [orderId], references: [id])
  orderId   Int
  
  menu      Menu  @relation(fields: [menuId], references: [id])
  menuId    Int

  @@id([orderId, menuId])
}
